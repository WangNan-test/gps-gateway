package com.zkkj.gps.gateway.jt808tcp.monitor.test.demo03;

import com.zkkj.gps.gateway.jt808tcp.monitor.utils.EncoderUtils;
import com.zkkj.gps.gateway.jt808tcp.monitor.utils.HexStringUtils;

import java.io.UnsupportedEncodingException;

public class TestMain {

    public static void main(String[] args) {
        /*String hexStr = "D4A543443533313139";
        byte[] bytes = EncoderUtils.hexToByteArray(hexStr);
        try {
            String gbkStr = HexStringUtils.parseString(bytes, "GBK");
            System.out.println(gbkStr);
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }*/

        /*String hexStr1 = "7e02000051016600001097877200000000000c0002021b5b9c067d02a5790000000000a719092912193401040005dd1b02020000030200002504000000002a020000e10209d83317f33fffffc9c90d30303030303030303030303031e2f44fe27e";
        byte[] bytes1 = EncoderUtils.hexToByteArray(hexStr1);
        System.out.println();
        for (byte b : bytes1) {
            System.out.print(b + " ");
        }*/

        String hexs = "7e070401390138000000001f35000501003c00000000000c00c20209cb22067d0159a801ca0000000019121410472401040000000002020000030200002504000000002b0400000000300111310114003c00000000000c00c20209cb22067d0159a801ca0000000019121410560701040000000002020000030200002504000000002b0400000000300111310114003c00000000000c00c20209cb22067d0159a801c90000000019121411053601040000000002020000030200002504000000002b0400000000300116310114003c00000000000c00c20209cb22067d0159a801c90000000019121411113601040000000002020000030200002504000000002b0400000000300116310113003c00000000000c00c20209cb22067d0159a802450000000019121610084101040000000002020000030200002504000000002b04000000003001163101129b000200000138000000001f3713070401390138000000001f38000501003c00000000000c00c20209cb22067d0159a801ca0000000019121410472401040000000002020000030200002504000000002b0400000000300111310114003c00000000000c00c20209cb22067d0159a801ca0000000019121410560701040000000002020000030200002504000000002b0400000000300111310114003c00000000000c00c20209cb22067d0159a801c90000000019121411053601040000000002020000030200002504000000002b0400000000300116310114003c00000000000c00c20209cb22067d0159a801c90000000019121411113601040000000002020000030200002504000000002b0400000000300116310113003c00000000000c00c20209cb22067d0159a802450000000019121610084101040000000002020000030200002504000000002b0400000000300116310112960200003c0138000000001f3900000000000c00c20209cb22067d0159a802440000000019121610164001040000000002020000030200002504000000002b040000000030011531011296000200000138000000001f3a1e070401390138000000001f3b000501003c00000000000c00c20209cb22067d0159a801ca0000000019121410472401040000000002020000030200002504000000002b0400000000300111310114003c00000000000c00c20209cb22067d0159a801ca0000000019121410560701040000000002020000030200002504000000002b0400000000300111310114003c00000000000c00c20209cb22067d0159a801c90000000019121411053601040000000002020000030200002504000000002b0400000000300116310114003c00000000000c00c20209cb22067d0159a801c90000000019121411113601040000000002020000030200002504000000002b0400000000300116310113003c00000000000c00c20209cb22067d0159a802450000000019121610084101040000000002020000030200002504000000002b0400000000300116310112957e";
        System.out.println(EncoderUtils.hexToByteArray(hexs).length);
    }

}
