package com.zkkj.gps.gateway.ccs.controller;

import com.zkkj.gps.gateway.ccs.BaseTests;
import com.zkkj.gps.gateway.common.utils.DateTimeUtils;
import com.zkkj.gps.gateway.terminal.monitor.dto.gpsDto.BasicPositionDto;
import org.junit.Test;

public class GpsInternalControllerTest extends BaseTests {

    @Test
    public void positionChange() throws Exception {


//        Map<String, Object> params = new HashMap<>();
//        params.put("terminalId", terminalId);
        try {
            int count = 0;
            String terminalId = "095039631301";
            //String line = "34.1851616,108.8550186;34.1838837,108.8526306;34.1839905,108.8506546;34.1841049,108.8463516;34.1840630,108.8433380;34.1840591,108.8404541;34.1840744,108.8388214;34.1840630,108.8357620;34.1840858,108.8335037;34.1840858,108.8310013;34.1840630,108.8283691;34.1840744,108.8283463;34.1841621,108.8259354;34.1838493,108.8258514;34.1836128,108.8258514;34.1835823,108.8260269;34.1834183,108.8261566;34.1832657,108.8262329;34.1829948,108.8265076;34.1827011,108.8265839;34.1824265,108.8266296;34.1822052,108.8266068;";
            String line ="34.1943970,108.8815231,2019-07-24 20:40:23,2019-07-24 20:40:27;" +
                    "34.1943970,108.8815231,2019-07-24 20:40:34,2019-07-24 20:40:37;" +
                    "34.1943970,108.8815231,2019-07-24 20:40:43,2019-07-24 20:40:47;" +
                    "34.1943970,108.8815231,2019-07-24 20:40:53,2019-07-24 20:40:57;" +
                    "34.1943970,108.8815231,2019-07-24 20:41:04,2019-07-24 20:41:07;" +
                    "34.1943970,108.8815231,2019-07-24 20:41:14,2019-07-24 20:41:18;" +
                    "34.1943970,108.8815231,2019-07-24 20:41:23,2019-07-24 20:41:27;" +
                    "34.1943970,108.8815231,2019-07-24 20:41:33,2019-07-24 20:41:37;" +
                    "34.1943970,108.8815231,2019-07-24 20:41:44,2019-07-24 20:41:47;" +
                    "34.1943970,108.8815231,2019-07-24 20:42:03,2019-07-24 20:42:07;" +
                    "34.1943970,108.8815231,2019-07-24 20:42:13,2019-07-24 20:42:17;" +
                    "34.1943970,108.8815231,2019-07-24 20:42:24,2019-07-24 20:42:27;" +
                    "34.1943970,108.8815231,2019-07-24 20:42:34,2019-07-24 20:42:38;" +
                    "34.1943970,108.8815231,2019-07-24 20:42:43,2019-07-24 20:42:47;" +
                    "34.1930122,108.8833542,2019-07-24 20:42:54,2019-07-24 20:42:52;" +
                    "34.1930122,108.8833542,2019-07-24 20:42:55,2019-07-24 20:42:54;" +
                    "34.1930122,108.8833542,2019-07-24 20:43:05,2019-07-24 20:43:04;" +
                    "34.1930122,108.8833542,2019-07-24 20:43:15,2019-07-24 20:43:14;" +
                    "34.1930122,108.8833542,2019-07-24 20:43:26,2019-07-24 20:43:24;" +
                    "34.1930122,108.8833542,2019-07-24 20:43:36,2019-07-24 20:43:34;" +
                    "34.1930122,108.8833542,2019-07-24 20:43:45,2019-07-24 20:43:44;" +
                    "34.1930122,108.8833542,2019-07-24 20:43:55,2019-07-24 20:43:54;" +
                    "34.1930122,108.8833542,2019-07-24 20:44:05,2019-07-24 20:44:04;" +
                    "34.1930122,108.8833542,2019-07-24 20:44:16,2019-07-24 20:44:14;" +
                    "34.1930122,108.8833542,2019-07-24 20:44:25,2019-07-24 20:44:24;" +
                    "34.1930122,108.8833542,2019-07-24 20:44:35,2019-07-24 20:44:34;" +
                    "34.1930122,108.8833542,2019-07-24 20:44:46,2019-07-24 20:44:44;" +
                    "34.1930122,108.8833542,2019-07-24 20:44:56,2019-07-24 20:44:54;" +
                    "34.1930122,108.8833542,2019-07-24 20:45:05,2019-07-24 20:45:04;" +
                    "34.1930122,108.8833542,2019-07-24 20:45:15,2019-07-24 20:45:14;" +
                    "34.1930122,108.8833542,2019-07-24 20:45:26,2019-07-24 20:45:24;" +
                    "34.1930122,108.8833542,2019-07-24 20:45:35,2019-07-24 20:45:34;";

            String[] split = line.split(";");
            for (String str : split) {
                count++;
                String[] split1 = str.split(",");
                BasicPositionDto basicPositionDto = new BasicPositionDto();
                basicPositionDto.setDate(DateTimeUtils.parseLocalDateTime(split1[3]));
                basicPositionDto.setLatitude(Double.valueOf(split1[0]));
                basicPositionDto.setLongitude(Double.valueOf(split1[1]));
                //先将地球坐标转成火星坐标，然后将火星坐标转成百度坐标
               /* basicPositionDto.setRcvTime(DateTimeUtils.parseLocalDateTime(split1[3]));
                UDPGPSPositionDTO udpgpsPositionDTO = new UDPGPSPositionDTO();
                udpgpsPositionDTO.setTerminalId(terminalId);
                udpgpsPositionDTO.setBasicPositionDto(basicPositionDto);
                ResultVo<String> resultVo = postTest("/gps/internal/positionChange", udpgpsPositionDTO);
                if (resultVo.isSuccess() == true) {
                    System.err.println(count);
                }*/
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

//
//        Assert.assertTrue(resultVo.isSuccess());


    @Test
    public void batchUpdateTest() throws Exception {
//        ResultVo<String> resultVo = postTest("/gps/internal/batchUpdateTest",null);
//        Assert.assertTrue(resultVo.isSuccess());
    }
}